{"version":3,"sources":["components/StyledText.js","components/Test-id3.js","entries/index.js","components/Entry.js","screens/BlogScreen.js","screens/HomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["TextContainer","styled","p","_templateObject","props","striked","StyledText","_ref","children","Object","objectWithoutProperties","react_default","a","createElement","Test","_useState","useState","_useState2","slicedToArray","active","setActive","onClick","entries","id","date","text","mood","media","content","Test_id3","components_StyledText","EntryContainer","div","Entry_templateObject","EntryMedia","_templateObject2","EntryHeader","_templateObject3","EntryText","_templateObject4","EntryContent","_templateObject5","Entry","item","key","ReactHtmlParser","style","marginLeft","BlogScreen","Fragment","map","_","idx","invertedEntry","length","components_Entry","HomeScreen","position","width","right","alt","src","Header","h3","App_templateObject","App","react_router_dom","className","role","aria-label","href","marginTop","display","flexDirection","justifyContent","to","react_router","exact","path","component","Home","Blog","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23e7db80.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TextContainer = styled.p`\n  text-decoration: ${props => props.striked || \"none\"};\n`;\n\nconst StyledText = ({ children, ...props }) => {\n  return <TextContainer {...props}>{children}</TextContainer>;\n};\n\nexport default StyledText;\n","import React, { useState } from \"react\";\n\nconst Test = () => {\n  const [active, setActive] = useState(false);\n  return (\n    <button onClick={() => setActive(!active)}>\n      {active ? \"Thanks...\" : \"Press Me\"}\n    </button>\n  );\n};\n\nexport default Test;\n","import React from \"react\";\nimport StyledText from \"../components/StyledText\";\nimport Test from \"../components/Test-id3\";\n\nconst entries = [\n  {\n    id: 0,\n    date: \"090919\",\n    text: \"first entry.\",\n    mood: \"🧠😲\"\n  },\n  {\n    id: 1,\n    date: \"090919\",\n    text: \"<i>Life: a miracle as a result of a bunch of exceptions.</i>\",\n    mood: \"🌀\"\n  },\n  {\n    id: 2,\n    date: \"090919\",\n    text: \"William's Blake God\",\n    media:\n      '<img src=\"https://www.colorado.edu/english/sites/default/files/styles/medium/public/article-image/800px-europe_a_prophecy_copy_d_object_1_bentley_1_erdman_i_keynes_i_british_museum.jpg?itok=6MYy17S_\" />'\n  },\n  {\n    id: 3,\n    date: \"9102019\",\n    text:\n      \"<p>Imagine 2 dots. A knife and a curve tying them together. 2 feet. One mind and a heart. Pointy geometric structures that make you bleed. Incapacity of eating. Headaches and anxiety. Turbulent wind from the East and difficulty to swim in an empty pool. Burned wood that makes coal.</p><p>Inside an echo chamber saturated with lies and deceits. In another place of existence there's water straight from The Mountain. No knifes and a strong dot-connecting string. No lies. Peaceful swimming.</p>\",\n    mood: \"😖🤢✅☠️👋🐍\",\n    content: <Test />\n  },\n  {\n    id: 4,\n    date: \"9102019\",\n    mood: \"😡\",\n    content: (\n      <StyledText striked=\"line-through\">\n        Not a mirror. Not a validator. A separate soul, independent, without\n        external interference. No standards. Not a mirror. A human being, not a\n        tool.\n      </StyledText>\n    )\n  },\n  {\n    id: 5,\n    date: \"9102019\",\n    mood: \"🐍🐛👤\",\n    content:\n      \"A bug inside a tornado. No body, no mind inside. A souless bug without a clue takes the subway everyday to die again and again. Black waters to wake it up. No food, no eating, no living. Alive.\"\n  },\n  {\n    id: 6,\n    date: \"9102019\",\n    mood: \"🛑🤧🎣🐟🐠🐡\",\n    content:\n      \"Fishing for fishing. No meaning, no feelings, no nothing. A lion in a coma. Praying for a miracle. Trial and error, error, error, error, error, error, error, error, error, error, error, error, error, error, error, error, error, error, error, error, error. Trial.\"\n  }\n];\n\nexport default entries;\n","import React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport styled from \"styled-components\";\n\nconst EntryContainer = styled.div`\n  display: flex;\n  background: transparent;\n  border-radius: 3px;\n  margin: 0.5em 0em;\n  padding: 0.25em 1em;\n`;\n\nconst EntryMedia = styled.div`\n  display: flex;\n  margin-top: 5px;\n  & > * {\n    width: 100%;\n  }\n`;\n\nconst EntryHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-right: 10px;\n  max-width: 80px;\n`;\n\nconst EntryText = styled.div`\n  text-align: left;\n  margin: 0;\n  align-self: flex-start;\n  & :first-child {\n    margin: 0;\n  }\n`;\n\nconst EntryContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  & :first-child {\n    margin: 0;\n  }\n`;\n\nconst Entry = ({ item }) => {\n  return (\n    <EntryContainer key={item.id}>\n      <EntryHeader>\n        {item.date && <span>{ReactHtmlParser(item.date)}</span>}\n        {item.mood && (\n          <span style={{ marginLeft: 5 }}>{ReactHtmlParser(item.mood)}</span>\n        )}\n      </EntryHeader>\n      <EntryContent>\n        {item.text && <EntryText>{ReactHtmlParser(item.text)}</EntryText>}\n        {item.media && <EntryMedia>{ReactHtmlParser(item.media)}</EntryMedia>}\n        {item.content}\n      </EntryContent>\n    </EntryContainer>\n  );\n};\n\nexport default Entry;\n","import React from \"react\";\nimport entries from \"../entries\";\nimport Entry from \"../components/Entry\";\n\nconst BlogScreen = props => {\n  return (\n    <>\n      {entries.map((_, idx) => {\n        const invertedEntry = entries[entries.length - idx - 1];\n        return <Entry key={invertedEntry.id} item={invertedEntry} />;\n      })}\n    </>\n  );\n};\n\nexport default BlogScreen;\n","import React from \"react\";\n\nconst HomeScreen = props => {\n  return (\n    <>\n      <img\n        style={{ position: \"absolute\", width: \"100%\", right: 0 }}\n        alt=\"Garden of Earthly Delights\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/The_Garden_of_Earthly_Delights_by_Hieronymus_Bosch.jpg/1600px-The_Garden_of_Earthly_Delights_by_Hieronymus_Bosch.jpg\"\n      />\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Blog from \"./screens/BlogScreen\";\nimport Home from \"./screens/HomeScreen\";\nimport styled from \"styled-components\";\n\nconst Header = styled.h3`\n  text-align: center;\n`;\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"content\">\n          <Header>\n            I'm Andre Simon from{\" \"}\n            <span role=\"img\" aria-label=\"Chile\">\n              🇨🇱\n            </span>\n            <span role=\"img\" aria-label=\"Chili\">\n              🌶\n            </span>{\" \"}\n            and I study CS in the Pontifical Catholic University of Chile. Feel\n            free to email me at <a href=\"mailto:aasimon@uc.cl\">aasimon@uc.cl</a>\n            <div\n              style={{\n                marginTop: \"10px\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"center\"\n              }}\n            >\n              <Link to=\"/\">Home</Link>\n              <a href=\"https://github.com/asimonv\">Github</a>\n              <a href=\"https://www.dropbox.com/s/1swbqptibfcomhy/Resume.pdf?dl=0\">\n                Resume\n              </a>\n              <a href=\"https://medium.com/@11010110\">Medium</a>\n              <Link to=\"/blog\">Blog</Link>\n            </div>\n          </Header>\n        </div>\n        <div className=\"content\">\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/blog\" component={Blog} />\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}